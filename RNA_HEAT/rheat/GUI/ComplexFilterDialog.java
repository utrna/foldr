/*
 * ComplexFilterDialog.java
 *
 * Created on May 6, 2003, 3:09 PM
 */

package rheat.GUI;

import rheat.base.*;
import rheat.filter.ComplexFilter;
import rheat.filter.Filter;
import javax.swing.JOptionPane;

/**
 *
 * @author  jyzhang
 */
public class ComplexFilterDialog
extends FilterDialog {

    public ComplexFilterDialog() {
        super("Complex Distance Filter");
        initComponents();
    }

    /**
     * Implements FilterDialog interface.
     */
    public rheat.filter.Filter getNewFilter() {
        return filter;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        minGField = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        maxGField = new javax.swing.JTextField();

        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel1.setText("Specify the parameters for complex distance");
        jPanel1.add(jLabel1);

        getContentPane().add(jPanel1);

        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel2.setText("Maximum Simple Distance Range");
        jLabel2.setPreferredSize(new java.awt.Dimension(220, 16));
        jPanel2.add(jLabel2);

        minGField.setColumns(4);
        minGField.setText("default");
        jPanel2.add(minGField);

        getContentPane().add(jPanel2);

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel3.setText("Maximum Complex Distance");
        jLabel3.setPreferredSize(new java.awt.Dimension(220, 16));
        jPanel3.add(jLabel3);

        maxGField.setColumns(4);
        maxGField.setText("default");
        jPanel3.add(maxGField);

        getContentPane().add(jPanel3);
    }

    /**
     * Implementation of interface method; commits changes (as the
     * user has accepted the dialog).
     */
    void actionPanelAccepted() {
        ComplexFilter newFilter = new ComplexFilter();
        try {
            int min = Integer.MAX_VALUE; 
            int max = Integer.MAX_VALUE;
            String maxG = this.maxGField.getText();
            String minG = this.minGField.getText();
            if (!(maxG.equals("DEFAULT") || maxG.equals("default"))){
                max = Integer.parseInt(maxG);
            }
            if (!(minG.equals("DEFAULT") || minG.equals("default"))){
                min = Integer.parseInt(minG);
            }
            this.setVisible(false);
            String d = "Maximum Simple Distance: " + min + "\n";
            d += "Maximum Complex Distance: " + max + "\n";
            newFilter.setArguments(max, min);
            newFilter.setDescription(d);
            this.filter = newFilter;
        }
        catch (NumberFormatException ex){
            JOptionPane.showMessageDialog(this, "Invalid Input: Bad number", "Error", JOptionPane.ERROR_MESSAGE);
        }
        catch (RuntimeException ex){
            JOptionPane.showMessageDialog(this, ex.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    // Variables declaration - do not modify
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField minGField;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField maxGField;
    // End of variables declaration
    private Filter filter; // null unless dialog was accepted by user

}


