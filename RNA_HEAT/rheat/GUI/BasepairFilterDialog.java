/*
 * BasicFilterDialog.java
 *
 * Created on April 3, 2003, 5:17 PM
 */

package rheat.GUI;

import rheat.base.*;
import rheat.filter.AllHelicesFilter;
import rheat.filter.BPFilter;
import rheat.filter.Filter;

/**
 *
 * @author  jyzhang
 */
public class BasepairFilterDialog
extends FilterDialog {

    public BasepairFilterDialog() {
        super("Basepairs");
        initComponents();
    }

    /**
     * Implements FilterDialog interface.
     */
    public rheat.filter.Filter getNewFilter() {
        return filter;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        cgCheckBox = new javax.swing.JCheckBox();
        auCheckBox = new javax.swing.JCheckBox();
        guCheckBox = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        aaCheckBox = new javax.swing.JCheckBox();
        acCheckBox = new javax.swing.JCheckBox();
        agCheckBox = new javax.swing.JCheckBox();
        ccCheckBox = new javax.swing.JCheckBox();
        cuCheckBox = new javax.swing.JCheckBox();
        ggCheckBox = new javax.swing.JCheckBox();
        uuCheckBox = new javax.swing.JCheckBox();

        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel1.setText("Basepairs to include:");
        jPanel1.add(jLabel1);

        getContentPane().add(jPanel1);

        cgCheckBox.setSelected(true);
        cgCheckBox.setText("C-G");
        jPanel2.add(cgCheckBox);

        auCheckBox.setSelected(true);
        auCheckBox.setText("A-U");
        jPanel2.add(auCheckBox);

        guCheckBox.setSelected(true);
        guCheckBox.setText("G-U");
        jPanel2.add(guCheckBox);

        getContentPane().add(jPanel2);

        aaCheckBox.setText("A-A");
        jPanel4.add(aaCheckBox);

        acCheckBox.setText("A-C");
        jPanel4.add(acCheckBox);

        agCheckBox.setText("A-G");
        jPanel4.add(agCheckBox);

        ccCheckBox.setText("C-C");
        jPanel4.add(ccCheckBox);

        cuCheckBox.setText("C-U");
        jPanel4.add(cuCheckBox);

        ggCheckBox.setText("G-G");
        jPanel4.add(ggCheckBox);

        uuCheckBox.setText("U-U");
        jPanel4.add(uuCheckBox);

        getContentPane().add(jPanel4);
    }//GEN-END:initComponents

    /**
     * Implementation of interface method; commits changes (as the
     * user has accepted the dialog).
     */
    void actionPanelAccepted() {
        BPFilter newFilter = new BPFilter();
        int[] filterOptions = new int[10];
        // get the selected basepair types.
        if (this.ccCheckBox.isSelected()){
            filterOptions[0] = BasepairType.CC;
        }
        if (this.cgCheckBox.isSelected()){
            filterOptions[1] = BasepairType.CG;
        }
        if (this.cuCheckBox.isSelected()){
            filterOptions[2] = BasepairType.CU;
        }
        if (this.aaCheckBox.isSelected()){
            filterOptions[3] = BasepairType.AA;
        }
        if (this.acCheckBox.isSelected()){
            filterOptions[4] = BasepairType.AC;
        }
        if (this.agCheckBox.isSelected()){
            filterOptions[5] = BasepairType.AG;
        }
        if (this.auCheckBox.isSelected()){
            filterOptions[6] = BasepairType.AU;
        }
        if (this.ggCheckBox.isSelected()){
            filterOptions[7] = BasepairType.GG;
        }
        if (this.guCheckBox.isSelected()){
            filterOptions[8] = BasepairType.GU;
        }
        if (this.uuCheckBox.isSelected()){
            filterOptions[9] = BasepairType.UU;
        }
        newFilter.setArguments(filterOptions);
        // set return value for getNewFilter()
        this.filter = newFilter;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox auCheckBox;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JCheckBox ccCheckBox;
    private javax.swing.JCheckBox ggCheckBox;
    private javax.swing.JCheckBox agCheckBox;
    private javax.swing.JCheckBox uuCheckBox;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JCheckBox cuCheckBox;
    private javax.swing.JCheckBox aaCheckBox;
    private javax.swing.JCheckBox acCheckBox;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JCheckBox cgCheckBox;
    private javax.swing.JCheckBox guCheckBox;
    // End of variables declaration//GEN-END:variables
    private Filter filter; // null unless dialog was accepted by user

}
